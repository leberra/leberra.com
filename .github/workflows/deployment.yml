name: Reusable Deployment Workflow

on:
  workflow_call:
    inputs:
      target-env:
        required: true
        type: string
      AWS_DEFAULT_REGION:
        required: true
        type: string
      AWS_S3_BUCKET:
        required: true
        type: string
      AWS_CLOUDFRONT_DISTRIBUTION_ID:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.target-env }}
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.target-env }}
    defaults:
      run:
        working-directory: ./site

    steps:
      - name: Echo out some of the inputs
        run: |
          echo "Target environment: ${{ inputs.target-env }}"
          echo "AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}"
          echo "AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ inputs.AWS_CLOUDFRONT_DISTRIBUTION_ID }}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
          lfs: true # Fetch images and other binary files

      - name: Get site artifact
        uses: actions/download-artifact@v3
        with:
          name: site
          path: site/

      - name: Unzip artifact
        run: tar -zxvf public.tar.gz

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"

      - name: Load Base URL, Bucket, CloudFront Distribution ID into config
        run: |
          sed -i "s|BUCKET_PLACEHOLDER|${{ inputs.AWS_S3_BUCKET }}|g" ./config.yaml
          sed -i "s|CLOUDFRONT_DISTRIBUTION_ID_PLACEHOLDER|${{ inputs.AWS_CLOUDFRONT_DISTRIBUTION_ID }}|g" ./config.yaml

      - name: Cat out config lines
        run: |
          cat ./config.yaml | grep -E 's3://|cloudFrontDistributionID'

      - name: Deploy
        run: hugo deploy --maxDeletes -1 --invalidateCDN
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
